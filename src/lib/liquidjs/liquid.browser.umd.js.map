{"version":3,"file":"liquid.browser.umd.js","sources":["../src/drop/drop.ts","../src/util/underscore.ts","../src/cache/lru.ts","../src/liquid-options.ts","../src/util/error.ts","../src/context/context.ts","../src/fs/browser.ts","../src/parser/token-kind.ts","../src/util/type-guards.ts","../src/util/character.ts","../src/parser/whitespace-ctrl.ts","../src/tokens/token.ts","../src/tokens/number-token.ts","../src/tokens/identifier-token.ts","../src/drop/empty-drop.ts","../src/drop/blank-drop.ts","../src/drop/null-drop.ts","../src/util/literal.ts","../src/tokens/literal-token.ts","../src/tokens/operator-token.ts","../src/parser/parse-string-literal.ts","../src/tokens/property-access-token.ts","../src/util/assert.ts","../src/tokens/filter-token.ts","../src/tokens/hash-token.ts","../src/tokens/quoted-token.ts","../src/tokens/html-token.ts","../src/tokens/delimited-token.ts","../src/tokens/tag-token.ts","../src/tokens/range-token.ts","../src/tokens/output-token.ts","../src/parser/match-operator.ts","../src/parser/tokenizer.ts","../src/render/render.ts","../src/parser/parse-stream.ts","../src/template/template-impl.ts","../src/render/emitter.ts","../src/drop/comparable.ts","../src/render/boolean.ts","../src/render/operator.ts","../src/render/expression.ts","../src/template/tag/hash.ts","../src/util/async.ts","../src/template/tag/tag.ts","../src/parser/filter-arg.ts","../src/template/filter/filter.ts","../src/template/value.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/util/collection.ts","../src/drop/forloop-drop.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/context/block-mode.ts","../src/builtin/tags/include.ts","../src/builtin/tags/render.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/drop/tablerowloop-drop.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/tags/index.ts","../src/builtin/filters/html.ts","../src/builtin/filters/math.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/util/strftime.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/builtin/filters/string.ts","../src/template/tag/tag-map.ts","../src/template/filter/filter-map.ts","../src/liquid.ts"],"sourcesContent":["export abstract class Drop {\n  public valueOf (): any {\n    return undefined\n  }\n\n  public liquidMethodMissing (key: string): Promise<string | undefined> | string | undefined {\n    return undefined\n  }\n}\n","import { Drop } from '../drop/drop'\n\nconst toStr = Object.prototype.toString\nconst toLowerCase = String.prototype.toLowerCase\n\n/*\n * Checks if value is classified as a String primitive or object.\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is a string, else false.\n */\nexport function isString (value: any): value is string {\n  return toStr.call(value) === '[object String]'\n}\n\nexport function isFunction (value: any): value is Function {\n  return typeof value === 'function'\n}\n\nexport function promisify<T1, T2> (fn: (arg1: T1, cb: (err: Error | null, result: T2) => void) => void): (arg1: T1) => Promise<T2>;\nexport function promisify<T1, T2, T3> (fn: (arg1: T1, arg2: T2, cb: (err: Error | null, result: T3) => void) => void): (arg1: T1, arg2: T2) => Promise<T3>;\nexport function promisify (fn: any) {\n  return function (...args: any[]) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err: Error, result: any) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  value = toValue(value)\n  return isNil(value) ? '' : String(value)\n}\n\nexport function toValue (value: any): any {\n  return value instanceof Drop ? value.valueOf() : value\n}\n\nexport function isNumber (value: any): value is number {\n  return typeof value === 'number'\n}\n\nexport function toLiquid (value: any): any {\n  if (value && isFunction(value.toLiquid)) return toLiquid(value.toLiquid())\n  return value\n}\n\nexport function isNil (value: any): boolean {\n  return value === null || value === undefined\n}\n\nexport function isArray (value: any): value is any[] {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn <T> (\n  object: {[key: string]: T} | undefined,\n  iteratee: ((val: T, key: string, obj: {[key: string]: T}) => boolean | void)\n) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\nexport function last <T>(arr: T[]): T;\nexport function last (arr: string): string;\nexport function last (arr: any[] | string): any | string {\n  return arr[arr.length - 1]\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): value is object {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\nexport function range (start: number, stop: number, step = 1) {\n  const arr: number[] = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => ch + str)\n}\n\nexport function padEnd (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => str + ch)\n}\n\nexport function pad (str: any, length: number, ch: string, add: (str: string, ch: string) => string) {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = add(str, ch)\n  return str\n}\n\nexport function identify<T> (val: T): T {\n  return val\n}\n\nexport function snakeCase (str: string) {\n  return str.replace(\n    /(\\w?)([A-Z])/g,\n    (_, a, b) => (a ? a + '_' : '') + b.toLowerCase()\n  )\n}\n\nexport function changeCase (str: string): string {\n  const hasLowerCase = [...str].some(ch => ch >= 'a' && ch <= 'z')\n  return hasLowerCase ? str.toUpperCase() : str.toLowerCase()\n}\n\nexport function ellipsis (str: string, N: number): string {\n  return str.length > N ? str.substr(0, N - 3) + '...' : str\n}\n\n// compare string in case-insensitive way, undefined values to the tail\nexport function caseInsensitiveCompare (a: any, b: any) {\n  if (a == null && b == null) return 0\n  if (a == null) return 1\n  if (b == null) return -1\n  a = toLowerCase.call(a)\n  b = toLowerCase.call(b)\n  if (a < b) return -1\n  if (a > b) return 1\n  return 0\n}\n","import { Cache } from './cache'\n\nclass Node<T> {\n  constructor (\n    public key: string,\n    public value: T,\n    public next: Node<T>,\n    public prev: Node<T>\n  ) {}\n}\n\nexport class LRU<T> implements Cache<T> {\n  private cache: { [key: string]: Node<T> } = {}\n  private head: Node<T>\n  private tail: Node<T>\n\n  constructor (\n    public limit: number,\n    public size = 0\n  ) {\n    this.head = new Node<T>('HEAD', null as any, null as any, null as any)\n    this.tail = new Node<T>('TAIL', null as any, null as any, null as any)\n    this.head.next = this.tail\n    this.tail.prev = this.head\n  }\n\n  write (key: string, value: T) {\n    if (this.cache[key]) {\n      this.cache[key].value = value\n    } else {\n      const node = new Node(key, value, this.head.next, this.head)\n      this.head.next.prev = node\n      this.head.next = node\n\n      this.cache[key] = node\n      this.size++\n      this.ensureLimit()\n    }\n  }\n\n  read (key: string): T | undefined {\n    if (!this.cache[key]) return\n    const { value } = this.cache[key]\n    this.remove(key)\n    this.write(key, value)\n    return value\n  }\n\n  remove (key: string) {\n    const node = this.cache[key]\n    node.prev.next = node.next\n    node.next.prev = node.prev\n    delete this.cache[key]\n    this.size--\n  }\n\n  clear () {\n    this.head.next = this.tail\n    this.tail.prev = this.head\n    this.size = 0\n    this.cache = {}\n  }\n\n  private ensureLimit () {\n    if (this.size > this.limit) this.remove(this.tail.prev.key)\n  }\n}\n","import * as _ from './util/underscore'\nimport { Template } from './template/template'\nimport { Cache } from './cache/cache'\nimport { LRU } from './cache/lru'\nimport { FS } from './fs/fs'\n\nexport interface LiquidOptions {\n  /** A directory or an array of directories from where to resolve layout and include templates, and the filename passed to `.renderFile()`. If it's an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[];\n  /** Add a extname (if filepath doesn't include one) before template file lookup. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string;\n  /** Whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean | number | Cache<Template[]>;\n  /** Use Javascript Truthiness. Defaults to `false`. */\n  jsTruthy?: boolean;\n  /** If set, treat the `filepath` parameter in `{%include filepath %}` and `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean;\n  /** Whether or not to assert filter existence. If set to `false`, undefined filters will be skipped. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strictFilters?: boolean;\n  /** Whether or not to assert variable existence.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strictVariables?: boolean;\n  /** Modifies the behavior of `strictVariables`. If set, a single undefined variable will *not* cause an exception in the context of the `if`/`elsif`/`unless` tag and the `default` filter. Instead, it will evaluate to `false` and `null`, respectively. Irrelevant if `strictVariables` is not set. Defaults to `false`. **/\n  lenientIf?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimTagRight?: boolean;\n  /** Similar to `trimTagRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimTagLeft?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimOutputRight?: boolean;\n  /** Similar to `trimOutputRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimOutputLeft?: boolean;\n  /** The left delimiter for liquid tags. **/\n  tagDelimiterLeft?: string;\n  /** The right delimiter for liquid tags. **/\n  tagDelimiterRight?: string;\n  /** The left delimiter for liquid outputs. **/\n  outputDelimiterLeft?: string;\n  /** The right delimiter for liquid outputs. **/\n  outputDelimiterRight?: string;\n  /** Whether `trim*Left`/`trim*Right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean;\n  /** `fs` is used to override the default file-system module with a custom implementation. */\n  fs?: FS;\n  /** the global environment passed down to all partial templates, i.e. templates included by `include`, `layout` and `render` tags. */\n  globals?: object;\n  /** Whether or not to keep value type when writing the Output. Defaults to `false`. */\n  keepOutputType?: boolean;\n}\n\ninterface NormalizedOptions extends LiquidOptions {\n  root?: string[];\n  cache?: Cache<Template[]>;\n}\n\nexport interface NormalizedFullOptions extends NormalizedOptions {\n  root: string[];\n  extname: string;\n  cache: undefined | Cache<Template[]>;\n  jsTruthy: boolean;\n  dynamicPartials: boolean;\n  strictFilters: boolean;\n  strictVariables: boolean;\n  lenientIf: boolean;\n  trimTagRight: boolean;\n  trimTagLeft: boolean;\n  trimOutputRight: boolean;\n  trimOutputLeft: boolean;\n  tagDelimiterLeft: string;\n  tagDelimiterRight: string;\n  outputDelimiterLeft: string;\n  outputDelimiterRight: string;\n  greedy: boolean;\n  globals: object;\n  keepOutputType: boolean;\n}\n\nexport const defaultOptions: NormalizedFullOptions = {\n  root: ['.'],\n  cache: undefined,\n  extname: '',\n  dynamicPartials: true,\n  jsTruthy: false,\n  trimTagRight: false,\n  trimTagLeft: false,\n  trimOutputRight: false,\n  trimOutputLeft: false,\n  greedy: true,\n  tagDelimiterLeft: '{%',\n  tagDelimiterRight: '%}',\n  outputDelimiterLeft: '{{',\n  outputDelimiterRight: '}}',\n  strictFilters: false,\n  strictVariables: false,\n  lenientIf: false,\n  globals: {},\n  keepOutputType: false\n}\n\nexport function normalize (options?: LiquidOptions): NormalizedOptions {\n  options = options || {}\n  if (options.hasOwnProperty('root')) {\n    options.root = normalizeStringArray(options.root)\n  }\n  if (options.hasOwnProperty('cache')) {\n    let cache: Cache<Template[]> | undefined\n    if (typeof options.cache === 'number') cache = options.cache > 0 ? new LRU(options.cache) : undefined\n    else if (typeof options.cache === 'object') cache = options.cache\n    else cache = options.cache ? new LRU<Template[]>(1024) : undefined\n    options.cache = cache\n  }\n  return options as NormalizedOptions\n}\n\nexport function applyDefault (options: NormalizedOptions): NormalizedFullOptions {\n  return { ...defaultOptions, ...options }\n}\n\nexport function normalizeStringArray (value: any): string[] {\n  if (_.isArray(value)) return value as string[]\n  if (_.isString(value)) return [value as string]\n  return []\n}\n","import * as _ from './underscore'\nimport { Token } from '../tokens/token'\nimport { Template } from '../template/template'\n\nabstract class LiquidError extends Error {\n  private token: Token\n  private originalError: Error\n  public constructor (err: Error, token: Token) {\n    super(err.message)\n    this.originalError = err\n    this.token = token\n  }\n  protected update () {\n    const err = this.originalError\n    const context = mkContext(this.token)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + context +\n      '\\n' + this.stack + '\\nFrom ' + err.stack\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  public constructor (message: string, token: Token) {\n    super(new Error(message), token)\n    this.name = 'TokenizationError'\n    super.update()\n  }\n}\n\nexport class ParseError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'ParseError'\n    this.message = err.message\n    super.update()\n  }\n}\n\nexport class RenderError extends LiquidError {\n  public constructor (err: Error, tpl: Template) {\n    super(err, tpl.token)\n    this.name = 'RenderError'\n    this.message = err.message\n    super.update()\n  }\n  public static is (obj: any): obj is RenderError {\n    return obj instanceof RenderError\n  }\n}\n\nexport class UndefinedVariableError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'UndefinedVariableError'\n    this.message = err.message\n    super.update()\n  }\n}\n\n// only used internally; raised where we don't have token information,\n// so it can't be an UndefinedVariableError.\nexport class InternalUndefinedVariableError extends Error {\n  variableName: string\n\n  public constructor (variableName: string) {\n    super(`undefined variable: ${variableName}`)\n    this.name = 'InternalUndefinedVariableError'\n    this.variableName = variableName\n  }\n}\n\nexport class AssertionError extends Error {\n  public constructor (message: string) {\n    super(message)\n    this.name = 'AssertionError'\n    this.message = message + ''\n  }\n}\n\nfunction mkContext (token: Token) {\n  const [line] = token.getPosition()\n  const lines = token.input.split('\\n')\n  const begin = Math.max(line - 2, 1)\n  const end = Math.min(line + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === line) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg: string, token: Token) {\n  if (token.file) msg += `, file:${token.file}`\n  const [line, col] = token.getPosition()\n  msg += `, line:${line}, col:${col}`\n  return msg\n}\n","import { Drop } from '../drop/drop'\nimport { __assign } from 'tslib'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { Scope } from './scope'\nimport { isArray, isNil, isString, isFunction, toLiquid } from '../util/underscore'\nimport { InternalUndefinedVariableError } from '../util/error'\n\nexport class Context {\n  private scopes: Scope[] = [{}]\n  private registers = {}\n  public environments: Scope\n  public globals: Scope\n  public sync: boolean\n  public opts: NormalizedFullOptions\n  public constructor (env: object = {}, opts: NormalizedFullOptions = defaultOptions, sync = false) {\n    this.sync = sync\n    this.opts = opts\n    this.globals = opts.globals\n    this.environments = env\n  }\n  public getRegister (key: string, defaultValue = {}) {\n    return (this.registers[key] = this.registers[key] || defaultValue)\n  }\n  public setRegister (key: string, value: any) {\n    return (this.registers[key] = value)\n  }\n  public saveRegister (...keys: string[]): [string, any][] {\n    return keys.map(key => [key, this.getRegister(key)])\n  }\n  public restoreRegister (keyValues: [string, any][]) {\n    return keyValues.forEach(([key, value]) => this.setRegister(key, value))\n  }\n  public getAll () {\n    return [this.globals, this.environments, ...this.scopes]\n      .reduce((ctx, val) => __assign(ctx, val), {})\n  }\n  public get (paths: string[]) {\n    const scope = this.findScope(paths[0])\n    return this.getFromScope(scope, paths)\n  }\n  public getFromScope (scope: object, paths: string[] | string) {\n    if (typeof paths === 'string') paths = paths.split('.')\n    return paths.reduce((scope, path) => {\n      scope = readProperty(scope, path)\n      if (isNil(scope) && this.opts.strictVariables) {\n        throw new InternalUndefinedVariableError(path)\n      }\n      return scope\n    }, scope)\n  }\n  public push (ctx: object) {\n    return this.scopes.push(ctx)\n  }\n  public pop () {\n    return this.scopes.pop()\n  }\n  public bottom () {\n    return this.scopes[0]\n  }\n  private findScope (key: string) {\n    for (let i = this.scopes.length - 1; i >= 0; i--) {\n      const candidate = this.scopes[i]\n      if (key in candidate) return candidate\n    }\n    if (key in this.environments) return this.environments\n    return this.globals\n  }\n}\n\nexport function readProperty (obj: Scope, key: string) {\n  if (isNil(obj)) return obj\n  obj = toLiquid(obj)\n  if (obj instanceof Drop) {\n    if (isFunction(obj[key])) return obj[key]()\n    if (obj.hasOwnProperty(key)) return obj[key]\n    return obj.liquidMethodMissing(key)\n  }\n  if (key === 'size') return readSize(obj)\n  if (key === 'first') return readFirst(obj)\n  if (key === 'last') return readLast(obj)\n  return obj[key]\n}\n\nfunction readFirst (obj: Scope) {\n  if (isArray(obj)) return obj[0]\n  return obj['first']\n}\n\nfunction readLast (obj: Scope) {\n  if (isArray(obj)) return obj[obj.length - 1]\n  return obj['last']\n}\n\nfunction readSize (obj: Scope) {\n  if (isArray(obj) || isString(obj)) return obj.length\n  return obj['size']\n}\n","import { last } from '../util/underscore'\n\nfunction domResolve (root: string, path: string) {\n  const base = document.createElement('base')\n  base.href = root\n\n  const head = document.getElementsByTagName('head')[0]\n  head.insertBefore(base, head.firstChild)\n\n  const a = document.createElement('a')\n  a.href = path\n  const resolved = a.href\n  head.removeChild(base)\n\n  return resolved\n}\n\nexport function resolve (root: string, filepath: string, ext: string) {\n  if (root.length && last(root) !== '/') root += '/'\n  const url = domResolve(root, filepath)\n  return url.replace(/^(\\w+:\\/\\/[^/]+)(\\/[^?]+)/, (str, origin, path) => {\n    const last = path.split('/').pop()\n    if (/\\.\\w+$/.test(last)) return str\n    return origin + path + ext\n  })\n}\n\nexport async function readFile (url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.responseText as string)\n      } else {\n        reject(new Error(xhr.statusText))\n      }\n    }\n    xhr.onerror = () => {\n      reject(new Error('An error occurred whilst receiving the response.'))\n    }\n    xhr.open('GET', url)\n    xhr.send()\n  })\n}\n\nexport function readFileSync (url: string): string {\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', url, false)\n  xhr.send()\n  if (xhr.status < 200 || xhr.status >= 300) {\n    throw new Error(xhr.statusText)\n  }\n  return xhr.responseText as string\n}\n\nexport async function exists (filepath: string) {\n  return true\n}\n\nexport function existsSync (filepath: string) {\n  return true\n}\n","export enum TokenKind {\n  Number = 1,\n  Literal = 2,\n  Tag = 4,\n  Output = 8,\n  HTML = 16,\n  Filter = 32,\n  Hash = 64,\n  PropertyAccess = 128,\n  Word = 256,\n  Range = 512,\n  Quoted = 1024,\n  Operator = 2048,\n  Delimited = Tag | Output\n}\n","import { OperatorToken } from '../tokens/operator-token'\nimport { DelimitedToken } from '../tokens/delimited-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { HTMLToken } from '../tokens/html-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport function isDelimitedToken (val: any): val is DelimitedToken {\n  return !!(getKind(val) & TokenKind.Delimited)\n}\n\nexport function isOperatorToken (val: any): val is OperatorToken {\n  return getKind(val) === TokenKind.Operator\n}\n\nexport function isHTMLToken (val: any): val is HTMLToken {\n  return getKind(val) === TokenKind.HTML\n}\n\nexport function isOutputToken (val: any): val is OutputToken {\n  return getKind(val) === TokenKind.Output\n}\n\nexport function isTagToken (val: any): val is TagToken {\n  return getKind(val) === TokenKind.Tag\n}\n\nexport function isQuotedToken (val: any): val is QuotedToken {\n  return getKind(val) === TokenKind.Quoted\n}\n\nexport function isLiteralToken (val: any): val is LiteralToken {\n  return getKind(val) === TokenKind.Literal\n}\n\nexport function isNumberToken (val: any): val is NumberToken {\n  return getKind(val) === TokenKind.Number\n}\n\nexport function isPropertyAccessToken (val: any): val is PropertyAccessToken {\n  return getKind(val) === TokenKind.PropertyAccess\n}\n\nexport function isWordToken (val: any): val is IdentifierToken {\n  return getKind(val) === TokenKind.Word\n}\n\nexport function isRangeToken (val: any): val is RangeToken {\n  return getKind(val) === TokenKind.Range\n}\n\nfunction getKind (val: any) {\n  return val ? val.kind : -1\n}\n","// **DO NOT CHANGE THIS FILE**\n//\n// This file is generated by bin/character-gen.js\n// bitmask character types to boost performance\nexport const TYPES = [0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 4, 4, 4, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 8, 0, 0, 0, 0, 8, 0, 0, 0, 64, 0, 65, 0, 0, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 0, 0, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]\nexport const IDENTIFIER = 1\nexport const OPERATOR = 2\nexport const BLANK = 4\nexport const QUOTE = 8\nexport const INLINE_BLANK = 16\nexport const NUMBER = 32\nexport const SIGN = 64\nTYPES[160] = TYPES[5760] = TYPES[6158] = TYPES[8192] = TYPES[8193] = TYPES[8194] = TYPES[8195] = TYPES[8196] = TYPES[8197] = TYPES[8198] = TYPES[8199] = TYPES[8200] = TYPES[8201] = TYPES[8202] = TYPES[8232] = TYPES[8233] = TYPES[8239] = TYPES[8287] = TYPES[12288] = BLANK\n","import { Token } from '../tokens/token'\nimport { isTagToken, isHTMLToken, isDelimitedToken } from '../util/type-guards'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TYPES, INLINE_BLANK, BLANK } from '../util/character'\n\nexport function whiteSpaceCtrl (tokens: Token[], options: NormalizedFullOptions) {\n  let inRaw = false\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n    if (!isDelimitedToken(token)) continue\n    if (!inRaw && token.trimLeft) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (isTagToken(token)) {\n      if (token.name === 'raw') inRaw = true\n      else if (token.name === 'endraw') inRaw = false\n    }\n\n    if (!inRaw && token.trimRight) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  }\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.end - 1 - token.trimRight)] & mask) token.trimRight++\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.begin + token.trimLeft)] & mask) token.trimLeft++\n  if (token.input.charAt(token.begin + token.trimLeft) === '\\n') token.trimLeft++\n}\n","import { TokenKind } from '../parser/token-kind'\n\nexport abstract class Token {\n  public constructor (\n    public kind: TokenKind,\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {}\n  public getText () {\n    return this.input.slice(this.begin, this.end)\n  }\n  public getPosition () {\n    let [row, col] = [1, 1]\n    for (let i = 0; i < this.begin; i++) {\n      if (this.input[i] === '\\n') {\n        row++\n        col = 1\n      } else col++\n    }\n    return [row, col]\n  }\n  public size () {\n    return this.end - this.begin\n  }\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class NumberToken extends Token {\n  constructor (\n    public whole: IdentifierToken,\n    public decimal?: IdentifierToken\n  ) {\n    super(TokenKind.Number, whole.input, whole.begin, decimal ? decimal.end : whole.end, whole.file)\n  }\n}\n","import { Token } from './token'\nimport { NUMBER, TYPES, SIGN } from '../util/character'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class IdentifierToken extends Token {\n  public content: string\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Word, input, begin, end, file)\n    this.content = this.getText()\n  }\n  isNumber (allowSign = false) {\n    const begin = allowSign && TYPES[this.input.charCodeAt(this.begin)] & SIGN\n      ? this.begin + 1\n      : this.begin\n    for (let i = begin; i < this.end; i++) {\n      if (!(TYPES[this.input.charCodeAt(i)] & NUMBER)) return false\n    }\n    return true\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isObject, isString, isArray } from '../util/underscore'\n\nexport class EmptyDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    if (isString(value) || isArray(value)) return value.length === 0\n    if (isObject(value)) return Object.keys(value).length === 0\n    return false\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return ''\n  }\n}\n","import { isNil, isString, toValue } from '../util/underscore'\nimport { EmptyDrop } from '../drop/empty-drop'\n\nexport class BlankDrop extends EmptyDrop {\n  public equals (value: any) {\n    if (value === false) return true\n    if (isNil(toValue(value))) return true\n    if (isString(value)) return /^\\s*$/.test(value)\n    return super.equals(value)\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isNil, toValue } from '../util/underscore'\nimport { BlankDrop } from '../drop/blank-drop'\n\nexport class NullDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    return isNil(toValue(value)) || value instanceof BlankDrop\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return null\n  }\n}\n","import { NullDrop } from '../drop/null-drop'\nimport { EmptyDrop } from '../drop/empty-drop'\nimport { BlankDrop } from '../drop/blank-drop'\n\nexport const literalValues = {\n  'true': true,\n  'false': false,\n  'nil': new NullDrop(),\n  'null': new NullDrop(),\n  'empty': new EmptyDrop(),\n  'blank': new BlankDrop()\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class LiteralToken extends Token {\n  public literal: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Literal, input, begin, end, file)\n    this.literal = this.getText()\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport const precedence = {\n  '==': 1,\n  '!=': 1,\n  '>': 1,\n  '<': 1,\n  '>=': 1,\n  '<=': 1,\n  'contains': 1,\n  'and': 0,\n  'or': 0\n}\n\nexport class OperatorToken extends Token {\n  public operator: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Operator, input, begin, end, file)\n    this.operator = this.getText()\n  }\n  getPrecedence () {\n    return precedence[this.getText()]\n  }\n}\n","const rHex = /[\\da-fA-F]/\nconst rOct = /[0-7]/\nconst escapeChar = {\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t',\n  v: '\\x0B'\n}\n\nfunction hexVal (c: string) {\n  const code = c.charCodeAt(0)\n  if (code >= 97) return code - 87\n  if (code >= 65) return code - 55\n  return code - 48\n}\n\nexport function parseStringLiteral (str: string): string {\n  let ret = ''\n  for (let i = 1; i < str.length - 1; i++) {\n    if (str[i] !== '\\\\') {\n      ret += str[i]\n      continue\n    }\n    if (escapeChar[str[i + 1]] !== undefined) {\n      ret += escapeChar[str[++i]]\n    } else if (str[i + 1] === 'u') {\n      let val = 0\n      let j = i + 2\n      while (j <= i + 5 && rHex.test(str[j])) {\n        val = val * 16 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    } else if (!rOct.test(str[i + 1])) {\n      ret += str[++i]\n    } else {\n      let j = i + 1\n      let val = 0\n      while (j <= i + 3 && rOct.test(str[j])) {\n        val = val * 8 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    }\n  }\n  return ret\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { QuotedToken } from './quoted-token'\nimport { TokenKind } from '../parser/token-kind'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\n\nexport class PropertyAccessToken extends Token {\n  constructor (\n    public variable: IdentifierToken | QuotedToken,\n    public props: (IdentifierToken | QuotedToken | PropertyAccessToken)[],\n    end: number\n  ) {\n    super(TokenKind.PropertyAccess, variable.input, variable.begin, end, variable.file)\n  }\n\n  getVariableAsText () {\n    if (this.variable instanceof IdentifierToken) {\n      return this.variable.getText()\n    } else {\n      return parseStringLiteral(this.variable.getText())\n    }\n  }\n}\n","import { AssertionError } from './error'\n\nexport function assert <T> (predicate: T | null | undefined, message?: () => string) {\n  if (!predicate) {\n    const msg = message ? message() : `expect ${predicate} to be true`\n    throw new AssertionError(msg)\n  }\n}\n","import { Token } from './token'\nimport { FilterArg } from '../parser/filter-arg'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class FilterToken extends Token {\n  public constructor (\n    public name: string,\n    public args: FilterArg[],\n    input: string,\n    begin: number,\n    end: number,\n    file?: string\n  ) {\n    super(TokenKind.Filter, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HashToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public name: IdentifierToken,\n    public value?: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Hash, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class QuotedToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Quoted, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HTMLToken extends Token {\n  trimLeft = 0\n  trimRight = 0\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.HTML, input, begin, end, file)\n  }\n  public getContent () {\n    return this.input.slice(this.begin + this.trimLeft, this.end - this.trimRight)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\nimport { last } from '../util/underscore'\n\nexport abstract class DelimitedToken extends Token {\n  public trimLeft = false\n  public trimRight = false\n  public content: string\n  public constructor (\n    kind: TokenKind,\n    content: string,\n    input: string,\n    begin: number,\n    end: number,\n    trimLeft: boolean,\n    trimRight: boolean,\n    file?: string\n  ) {\n    super(kind, input, begin, end, file)\n    this.content = this.getText()\n    const tl = content[0] === '-'\n    const tr = last(content) === '-'\n    this.content = content\n      .slice(\n        tl ? 1 : 0,\n        tr ? -1 : content.length\n      )\n      .trim()\n    this.trimLeft = tl || trimLeft\n    this.trimRight = tr || trimRight\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\nimport { Tokenizer } from '../parser/tokenizer'\n\nexport class TagToken extends DelimitedToken {\n  public name: string\n  public args: string\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimTagLeft, trimTagRight, tagDelimiterLeft, tagDelimiterRight } = options\n    const value = input.slice(begin + tagDelimiterLeft.length, end - tagDelimiterRight.length)\n    super(TokenKind.Tag, value, input, begin, end, trimTagLeft, trimTagRight, file)\n\n    const tokenizer = new Tokenizer(this.content)\n    this.name = tokenizer.readIdentifier().getText()\n    if (!this.name) throw new TokenizationError(`illegal tag syntax`, this)\n\n    tokenizer.skipBlank()\n    this.args = tokenizer.remaining()\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class RangeToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public lhs: ValueToken,\n    public rhs: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Range, input, begin, end, file)\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class OutputToken extends DelimitedToken {\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimOutputLeft, trimOutputRight, outputDelimiterLeft, outputDelimiterRight } = options\n    const value = input.slice(begin + outputDelimiterLeft.length, end - outputDelimiterRight.length)\n    super(TokenKind.Output, value, input, begin, end, trimOutputLeft, trimOutputRight, file)\n  }\n}\n","import { IDENTIFIER } from '../util/character'\n\nconst trie = {\n  a: { n: { d: { end: true, needBoundary: true } } },\n  o: { r: { end: true, needBoundary: true } },\n  c: { o: { n: { t: { a: { i: { n: { s: { end: true, needBoundary: true } } } } } } } },\n  '=': { '=': { end: true } },\n  '!': { '=': { end: true } },\n  '>': { end: true, '=': { end: true } },\n  '<': { end: true, '=': { end: true } }\n}\n\nexport function matchOperator (str: string, begin: number, end = str.length) {\n  let node = trie\n  let i = begin\n  let info\n  while (node[str[i]] && i < end) {\n    node = node[str[i++]]\n    if (node['end']) info = node\n  }\n  if (!info) return -1\n  if (info['needBoundary'] && str.charCodeAt(i) & IDENTIFIER) return -1\n  return i\n}\n","import { whiteSpaceCtrl } from './whitespace-ctrl'\nimport { NumberToken } from '../tokens/number-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { assert } from '../util/assert'\nimport { TopLevelToken } from '../tokens/toplevel-token'\nimport { FilterArg } from './filter-arg'\nimport { FilterToken } from '../tokens/filter-token'\nimport { HashToken } from '../tokens/hash-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { ellipsis } from '../util/underscore'\nimport { HTMLToken } from '../tokens/html-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { Token } from '../tokens/token'\nimport { RangeToken } from '../tokens/range-token'\nimport { ValueToken } from '../tokens/value-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { TYPES, QUOTE, BLANK, IDENTIFIER } from '../util/character'\nimport { matchOperator } from './match-operator'\n\nexport class Tokenizer {\n  p = 0\n  N: number\n  private rawBeginAt = -1\n\n  constructor (\n    private input: string,\n    private file: string = ''\n  ) {\n    this.N = input.length\n  }\n\n  * readExpression (): IterableIterator<Token> {\n    const operand = this.readValue()\n    if (!operand) return\n\n    yield operand\n\n    while (this.p < this.N) {\n      const operator = this.readOperator()\n      if (!operator) return\n\n      const operand = this.readValue()\n      if (!operand) return\n\n      yield operator\n      yield operand\n    }\n  }\n  readOperator (): OperatorToken | undefined {\n    this.skipBlank()\n    const end = matchOperator(this.input, this.p, this.p + 8)\n    if (end === -1) return\n    return new OperatorToken(this.input, this.p, (this.p = end), this.file)\n  }\n  readFilters (): FilterToken[] {\n    const filters = []\n    while (true) {\n      const filter = this.readFilter()\n      if (!filter) return filters\n      filters.push(filter)\n    }\n  }\n  readFilter (): FilterToken | null {\n    this.skipBlank()\n    if (this.end()) return null\n    assert(this.peek() === '|', () => `unexpected token at ${this.snapshot()}`)\n    this.p++\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return null\n    const args = []\n    this.skipBlank()\n    if (this.peek() === ':') {\n      do {\n        ++this.p\n        const arg = this.readFilterArg()\n        arg && args.push(arg)\n        while (this.p < this.N && this.peek() !== ',' && this.peek() !== '|') ++this.p\n      } while (this.peek() === ',')\n    }\n    return new FilterToken(name.getText(), args, this.input, begin, this.p, this.file)\n  }\n\n  readFilterArg (): FilterArg | undefined {\n    const key = this.readValue()\n    if (!key) return\n    this.skipBlank()\n    if (this.peek() !== ':') return key\n    ++this.p\n    const value = this.readValue()\n    return [key.getText(), value]\n  }\n\n  readTopLevelTokens (options: NormalizedFullOptions = defaultOptions): TopLevelToken[] {\n    const tokens: TopLevelToken[] = []\n    while (this.p < this.N) {\n      const token = this.readTopLevelToken(options)\n      tokens.push(token)\n    }\n    whiteSpaceCtrl(tokens, options)\n    return tokens\n  }\n\n  readTopLevelToken (options: NormalizedFullOptions): TopLevelToken {\n    const { tagDelimiterLeft, outputDelimiterLeft } = options\n    if (this.rawBeginAt > -1) return this.readEndrawOrRawContent(options)\n    if (this.match(tagDelimiterLeft)) return this.readTagToken(options)\n    if (this.match(outputDelimiterLeft)) return this.readOutputToken(options)\n    return this.readHTMLToken(options)\n  }\n\n  readHTMLToken (options: NormalizedFullOptions): HTMLToken {\n    const begin = this.p\n    while (this.p < this.N) {\n      const { tagDelimiterLeft, outputDelimiterLeft } = options\n      if (this.match(tagDelimiterLeft)) break\n      if (this.match(outputDelimiterLeft)) break\n      ++this.p\n    }\n    return new HTMLToken(this.input, begin, this.p, this.file)\n  }\n\n  readTagToken (options: NormalizedFullOptions): TagToken {\n    const { file, input } = this\n    const { tagDelimiterRight } = options\n    const begin = this.p\n    if (this.readTo(tagDelimiterRight) === -1) {\n      throw this.mkError(`tag ${this.snapshot(begin)} not closed`, begin)\n    }\n    const token = new TagToken(input, begin, this.p, options, file)\n    if (token.name === 'raw') this.rawBeginAt = begin\n    return token\n  }\n\n  readOutputToken (options: NormalizedFullOptions): OutputToken {\n    const { file, input } = this\n    const { outputDelimiterRight } = options\n    const begin = this.p\n    if (this.readTo(outputDelimiterRight) === -1) {\n      throw this.mkError(`output ${this.snapshot(begin)} not closed`, begin)\n    }\n    return new OutputToken(input, begin, this.p, options, file)\n  }\n\n  readEndrawOrRawContent (options: NormalizedFullOptions): HTMLToken | TagToken {\n    const { tagDelimiterLeft, tagDelimiterRight } = options\n    const begin = this.p\n    let leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n    while (this.p < this.N) {\n      if (this.readIdentifier().getText() !== 'endraw') {\n        leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n        continue\n      }\n      while (this.p <= this.N) {\n        if (this.rmatch(tagDelimiterRight)) {\n          const end = this.p\n          if (begin === leftPos) {\n            this.rawBeginAt = -1\n            return new TagToken(this.input, begin, end, options, this.file)\n          } else {\n            this.p = leftPos\n            return new HTMLToken(this.input, begin, leftPos, this.file)\n          }\n        }\n        if (this.rmatch(tagDelimiterLeft)) break\n        this.p++\n      }\n    }\n    throw this.mkError(`raw ${this.snapshot(this.rawBeginAt)} not closed`, begin)\n  }\n\n  mkError (msg: string, begin: number) {\n    return new TokenizationError(msg, new IdentifierToken(this.input, begin, this.N, this.file))\n  }\n\n  snapshot (begin: number = this.p) {\n    return JSON.stringify(ellipsis(this.input.slice(begin), 16))\n  }\n\n  /**\n   * @deprecated\n   */\n  readWord () {\n    console.warn('Tokenizer#readWord() will be removed, use #readIdentifier instead')\n    return this.readIdentifier()\n  }\n\n  readIdentifier (): IdentifierToken {\n    this.skipBlank()\n    const begin = this.p\n    while (this.peekType() & IDENTIFIER) ++this.p\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  readHashes () {\n    const hashes = []\n    while (true) {\n      const hash = this.readHash()\n      if (!hash) return hashes\n      hashes.push(hash)\n    }\n  }\n\n  readHash (): HashToken | undefined {\n    this.skipBlank()\n    if (this.peek() === ',') ++this.p\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return\n    let value\n\n    this.skipBlank()\n    if (this.peek() === ':') {\n      ++this.p\n      value = this.readValue()\n    }\n    return new HashToken(this.input, begin, this.p, name, value, this.file)\n  }\n\n  remaining () {\n    return this.input.slice(this.p)\n  }\n\n  advance (i = 1) {\n    this.p += i\n  }\n\n  end () {\n    return this.p >= this.N\n  }\n\n  readTo (end: string): number {\n    while (this.p < this.N) {\n      ++this.p\n      if (this.rmatch(end)) return this.p\n    }\n    return -1\n  }\n\n  readValue (): ValueToken | undefined {\n    const value = this.readQuoted() || this.readRange()\n    if (value) return value\n\n    if (this.peek() === '[') {\n      this.p++\n      const prop = this.readQuoted()\n      if (!prop) return\n      if (this.peek() !== ']') return\n      this.p++\n      return new PropertyAccessToken(prop, [], this.p)\n    }\n\n    const variable = this.readIdentifier()\n    if (!variable.size()) return\n\n    let isNumber = variable.isNumber(true)\n    const props: (QuotedToken | IdentifierToken)[] = []\n    while (true) {\n      if (this.peek() === '[') {\n        isNumber = false\n        this.p++\n        const prop = this.readValue() || new IdentifierToken(this.input, this.p, this.p, this.file)\n        this.readTo(']')\n        props.push(prop)\n      } else if (this.peek() === '.' && this.peek(1) !== '.') { // skip range syntax\n        this.p++\n        const prop = this.readIdentifier()\n        if (!prop.size()) break\n        if (!prop.isNumber()) isNumber = false\n        props.push(prop)\n      } else break\n    }\n    if (!props.length && literalValues.hasOwnProperty(variable.content)) {\n      return new LiteralToken(this.input, variable.begin, variable.end, this.file)\n    }\n    if (isNumber) return new NumberToken(variable, props[0] as IdentifierToken)\n    return new PropertyAccessToken(variable, props, this.p)\n  }\n\n  readRange (): RangeToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (this.peek() !== '(') return\n    ++this.p\n    const lhs = this.readValueOrThrow()\n    this.p += 2\n    const rhs = this.readValueOrThrow()\n    ++this.p\n    return new RangeToken(this.input, begin, this.p, lhs, rhs, this.file)\n  }\n\n  readValueOrThrow (): ValueToken {\n    const value = this.readValue()\n    assert(value, () => `unexpected token ${this.snapshot()}, value expected`)\n    return value!\n  }\n\n  readQuoted (): QuotedToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (!(this.peekType() & QUOTE)) return\n    ++this.p\n    let escaped = false\n    while (this.p < this.N) {\n      ++this.p\n      if (this.input[this.p - 1] === this.input[begin] && !escaped) break\n      if (escaped) escaped = false\n      else if (this.input[this.p - 1] === '\\\\') escaped = true\n    }\n    return new QuotedToken(this.input, begin, this.p, this.file)\n  }\n\n  readFileName (): IdentifierToken {\n    const begin = this.p\n    while (!(this.peekType() & BLANK) && this.peek() !== ',' && this.p < this.N) this.p++\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  match (word: string) {\n    for (let i = 0; i < word.length; i++) {\n      if (word[i] !== this.input[this.p + i]) return false\n    }\n    return true\n  }\n\n  rmatch (pattern: string) {\n    for (let i = 0; i < pattern.length; i++) {\n      if (pattern[pattern.length - 1 - i] !== this.input[this.p - 1 - i]) return false\n    }\n    return true\n  }\n\n  peekType (n = 0) {\n    return TYPES[this.input.charCodeAt(this.p + n)]\n  }\n\n  peek (n = 0) {\n    return this.input[this.p + n]\n  }\n\n  skipBlank () {\n    while (this.peekType() & BLANK) ++this.p\n  }\n}\n","import { RenderError } from '../util/error'\nimport { Context } from '../context/context'\nimport { Template } from '../template/template'\nimport { Emitter } from './emitter'\n\nexport class Render {\n  public * renderTemplates (templates: Template[], ctx: Context, emitter: Emitter): IterableIterator<any> {\n    for (const tpl of templates) {\n      try {\n        const html = yield tpl.render(ctx, emitter)\n        html && emitter.write(html)\n        if (emitter.break || emitter.continue) break\n      } catch (e) {\n        const err = RenderError.is(e) ? e : new RenderError(e, tpl)\n        throw err\n      }\n    }\n    return emitter.html\n  }\n}\n","import { Token } from '../tokens/token'\nimport { Template } from '../template/template'\nimport { isTagToken } from '../util/type-guards'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\ntype ParseToken<T extends Token> = ((token: T, remainTokens: T[]) => Template)\n\nexport class ParseStream<T extends Token = TopLevelToken> {\n  private tokens: T[]\n  private handlers: {[key: string]: (arg: any) => void} = {}\n  private stopRequested = false\n  private parseToken: ParseToken<T>\n\n  public constructor (tokens: T[], parseToken: ParseToken<T>) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  public on<T2 extends Template | T | undefined> (name: string, cb: (arg: T2) => void): ParseStream<T> {\n    this.handlers[name] = cb\n    return this\n  }\n  private trigger <T extends Token | Template> (event: string, arg?: T) {\n    const h = this.handlers[event]\n    return h ? (h(arg), true) : false\n  }\n  public start () {\n    this.trigger('start')\n    let token: T | undefined\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (isTagToken(token) && this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  public stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","export abstract class TemplateImpl<T> {\n  public token: T;\n  public constructor (token: T) {\n    this.token = token\n  }\n}\n","export class Emitter {\n  public html: any = '';\n  public break = false;\n  public continue = false;\n  private keepOutputType? = false;\n\n  constructor (keepOutputType: boolean|undefined) {\n    this.keepOutputType = keepOutputType\n  }\n\n  public write (html: any) {\n    // This will only preserve the type if the value is isolated.\n    // I.E:\n    // {{ my-port }} -> 42\n    // {{ my-host }}:{{ my-port }} -> 'host:42'\n    if (this.keepOutputType === true && typeof html !== 'string' && this.html === '') {\n      this.html = html\n    } else {\n      this.html += html as string\n    }\n  }\n}\n","import { isFunction } from '../util/underscore'\n\nexport interface Comparable {\n  equals: (rhs: any) => boolean;\n  gt: (rhs: any) => boolean;\n  geq: (rhs: any) => boolean;\n  lt: (rhs: any) => boolean;\n  leq: (rhs: any) => boolean;\n}\n\nexport function isComparable (arg: any): arg is Comparable {\n  return arg && isFunction(arg.equals)\n}\n","import { Context } from '../context/context'\n\nexport function isTruthy (val: any, ctx: Context): boolean {\n  return !isFalsy(val, ctx)\n}\n\nexport function isFalsy (val: any, ctx: Context): boolean {\n  if (ctx.opts.jsTruthy) {\n    return !val\n  } else {\n    return val === false || undefined === val || val === null\n  }\n}\n","import { isComparable } from '../drop/comparable'\nimport { Context } from '../context/context'\nimport { isFunction } from '../util/underscore'\nimport { isTruthy } from '../render/boolean'\n\nexport const operatorImpls: {[key: string]: (lhs: any, rhs: any, ctx: Context) => boolean} = {\n  '==': (l: any, r: any) => {\n    if (isComparable(l)) return l.equals(r)\n    if (isComparable(r)) return r.equals(l)\n    return l === r\n  },\n  '!=': (l: any, r: any) => {\n    if (isComparable(l)) return !l.equals(r)\n    if (isComparable(r)) return !r.equals(l)\n    return l !== r\n  },\n  '>': (l: any, r: any) => {\n    if (isComparable(l)) return l.gt(r)\n    if (isComparable(r)) return r.lt(l)\n    return l > r\n  },\n  '<': (l: any, r: any) => {\n    if (isComparable(l)) return l.lt(r)\n    if (isComparable(r)) return r.gt(l)\n    return l < r\n  },\n  '>=': (l: any, r: any) => {\n    if (isComparable(l)) return l.geq(r)\n    if (isComparable(r)) return r.leq(l)\n    return l >= r\n  },\n  '<=': (l: any, r: any) => {\n    if (isComparable(l)) return l.leq(r)\n    if (isComparable(r)) return r.geq(l)\n    return l <= r\n  },\n  'contains': (l: any, r: any) => {\n    return l && isFunction(l.indexOf) ? l.indexOf(r) > -1 : false\n  },\n  'and': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) && isTruthy(r, ctx),\n  'or': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) || isTruthy(r, ctx)\n}\n","import { QuotedToken } from '../tokens/quoted-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { assert } from '../util/assert'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport * as TypeGuards from '../util/type-guards'\nimport { Token } from '../tokens/token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\nimport { Context } from '../context/context'\nimport { range, toValue } from '../util/underscore'\nimport { Tokenizer } from '../parser/tokenizer'\nimport { operatorImpls } from '../render/operator'\nimport { UndefinedVariableError, InternalUndefinedVariableError } from '../util/error'\n\nexport class Expression {\n  private operands: any[] = []\n  private postfix: Token[]\n  private lenient: boolean\n\n  public constructor (str: string, lenient = false) {\n    const tokenizer = new Tokenizer(str)\n    this.postfix = [...toPostfix(tokenizer.readExpression())]\n    this.lenient = lenient\n  }\n  public evaluate (ctx: Context): any {\n    for (const token of this.postfix) {\n      if (TypeGuards.isOperatorToken(token)) {\n        const r = this.operands.pop()\n        const l = this.operands.pop()\n        const result = evalOperatorToken(token, l, r, ctx)\n        this.operands.push(result)\n      } else {\n        this.operands.push(evalToken(token, ctx, this.lenient && this.postfix.length === 1))\n      }\n    }\n    return this.operands[0]\n  }\n  public * value (ctx: Context) {\n    return toValue(this.evaluate(ctx))\n  }\n}\n\nexport function evalToken (token: Token | undefined, ctx: Context, lenient = false): any {\n  assert(ctx, () => 'unable to evaluate: context not defined')\n  if (TypeGuards.isPropertyAccessToken(token)) {\n    const variable = token.getVariableAsText()\n    const props: string[] = token.props.map(prop => evalToken(prop, ctx))\n    try {\n      return ctx.get([variable, ...props])\n    } catch (e) {\n      if (lenient && e instanceof InternalUndefinedVariableError) {\n        return null\n      } else {\n        throw (new UndefinedVariableError(e, token))\n      }\n    }\n  }\n  if (TypeGuards.isRangeToken(token)) return evalRangeToken(token, ctx)\n  if (TypeGuards.isLiteralToken(token)) return evalLiteralToken(token)\n  if (TypeGuards.isNumberToken(token)) return evalNumberToken(token)\n  if (TypeGuards.isWordToken(token)) return token.getText()\n  if (TypeGuards.isQuotedToken(token)) return evalQuotedToken(token)\n}\n\nfunction evalNumberToken (token: NumberToken) {\n  const str = token.whole.content + '.' + (token.decimal ? token.decimal.content : '')\n  return Number(str)\n}\n\nexport function evalQuotedToken (token: QuotedToken) {\n  return parseStringLiteral(token.getText())\n}\n\nfunction evalOperatorToken (token: OperatorToken, lhs: any, rhs: any, ctx: Context) {\n  const impl = operatorImpls[token.operator]\n  return impl(lhs, rhs, ctx)\n}\n\nfunction evalLiteralToken (token: LiteralToken) {\n  return literalValues[token.literal]\n}\n\nfunction evalRangeToken (token: RangeToken, ctx: Context) {\n  const low: number = evalToken(token.lhs, ctx)\n  const high: number = evalToken(token.rhs, ctx)\n  return range(+low, +high + 1)\n}\n\nfunction * toPostfix (tokens: IterableIterator<Token>): IterableIterator<Token> {\n  const ops: OperatorToken[] = []\n  for (const token of tokens) {\n    if (TypeGuards.isOperatorToken(token)) {\n      while (ops.length && ops[ops.length - 1].getPrecedence() > token.getPrecedence()) {\n        yield ops.pop()!\n      }\n      ops.push(token)\n    } else yield token\n  }\n  while (ops.length) {\n    yield ops.pop()!\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { Tokenizer } from '../../parser/tokenizer'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `, foo:'bar', coo:2 reversed %}`,\n *    hash['foo'] === 'bar'\n *    hash['coo'] === 2\n *    hash['reversed'] === undefined\n */\nexport class Hash {\n  hash: { [key: string]: any } = {}\n  constructor (markup: string) {\n    const tokenizer = new Tokenizer(markup)\n    for (const hash of tokenizer.readHashes()) {\n      this.hash[hash.name.content] = hash.value\n    }\n  }\n  * render (ctx: Context) {\n    const hash = {}\n    for (const key of Object.keys(this.hash)) {\n      hash[key] = yield evalToken(this.hash[key], ctx)\n    }\n    return hash\n  }\n}\n","import { isFunction } from './underscore'\n\ntype resolver = (x?: any) => any\n\ninterface Thenable {\n  then (resolve: resolver, reject?: resolver): Thenable;\n  catch (reject: resolver): Thenable;\n}\n\nfunction createResolvedThenable (value: any): Thenable {\n  const ret = {\n    then: (resolve: resolver) => resolve(value),\n    catch: () => ret\n  }\n  return ret\n}\n\nfunction createRejectedThenable (err: Error): Thenable {\n  const ret = {\n    then: (resolve: resolver, reject?: resolver) => {\n      if (reject) return reject(err)\n      return ret\n    },\n    catch: (reject: resolver) => reject(err)\n  }\n  return ret\n}\n\nfunction isThenable (val: any): val is Thenable {\n  return val && isFunction(val.then)\n}\n\nfunction isAsyncIterator (val: any): val is IterableIterator<any> {\n  return val && isFunction(val.next) && isFunction(val.throw) && isFunction(val.return)\n}\n\n// convert an async iterator to a thenable (Promise compatible)\nexport function toThenable (val: IterableIterator<any> | Thenable | any): Thenable {\n  if (isThenable(val)) return val\n  if (isAsyncIterator(val)) return reduce()\n  return createResolvedThenable(val)\n\n  function reduce (prev?: any): Thenable {\n    let state\n    try {\n      state = (val as IterableIterator<any>).next(prev)\n    } catch (err) {\n      return createRejectedThenable(err)\n    }\n\n    if (state.done) return createResolvedThenable(state.value)\n    return toThenable(state.value!).then(reduce, err => {\n      let state\n      try {\n        state = (val as IterableIterator<any>).throw!(err)\n      } catch (e) {\n        return createRejectedThenable(e)\n      }\n      if (state.done) return createResolvedThenable(state.value)\n      return reduce(state.value)\n    })\n  }\n}\n\nexport function toPromise (val: IterableIterator<any> | Thenable | any): Promise<any> {\n  return Promise.resolve(toThenable(val))\n}\n\n// get the value of async iterator in synchronous manner\nexport function toValue (val: IterableIterator<any> | Thenable | any) {\n  let ret: any\n  toThenable(val)\n    .then((x: any) => {\n      ret = x\n      return createResolvedThenable(ret)\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return ret\n}\n","import { isFunction } from '../../util/underscore'\nimport { Liquid } from '../../liquid'\nimport { TemplateImpl } from '../../template/template-impl'\nimport { Emitter, Hash, Context, TagToken, Template, TopLevelToken } from '../../types'\nimport { TagImpl } from './tag-impl'\n\nexport class Tag extends TemplateImpl<TagToken> implements Template {\n  public name: string\n  private impl: TagImpl\n\n  public constructor (token: TagToken, tokens: TopLevelToken[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = liquid.tags.get(token.name)\n\n    this.impl = Object.create(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const hash = yield new Hash(this.token.args).render(ctx)\n    const impl = this.impl\n    if (isFunction(impl.render)) return yield impl.render(ctx, emitter, hash)\n  }\n}\n","import { isArray } from '../util/underscore'\nimport { ValueToken } from '../tokens/value-token'\n\ntype KeyValuePair = [string?, ValueToken?]\n\nexport type FilterArg = ValueToken | KeyValuePair\n\nexport function isKeyValuePair (arr: FilterArg): arr is KeyValuePair { // TODO check\n  return isArray(arr)\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { identify } from '../../util/underscore'\nimport { FilterImplOptions } from './filter-impl-options'\nimport { FilterArg, isKeyValuePair } from '../../parser/filter-arg'\nimport { Liquid } from '../../liquid'\n\nexport class Filter {\n  public name: string\n  public args: FilterArg[]\n  private impl: FilterImplOptions\n  private liquid: Liquid\n\n  public constructor (name: string, impl: FilterImplOptions, args: FilterArg[], liquid: Liquid) {\n    this.name = name\n    this.impl = impl || identify\n    this.args = args\n    this.liquid = liquid\n  }\n  public * render (value: any, context: Context) {\n    const argv: any[] = []\n    for (const arg of this.args as FilterArg[]) {\n      if (isKeyValuePair(arg)) argv.push([arg[0], yield evalToken(arg[1], context)])\n      else argv.push(yield evalToken(arg, context))\n    }\n    return yield this.impl.apply({ context, liquid: this.liquid }, [value, ...argv])\n  }\n}\n","import { evalToken } from '../render/expression'\nimport { Tokenizer } from '../parser/tokenizer'\nimport { FilterMap } from '../template/filter/filter-map'\nimport { Filter } from './filter/filter'\nimport { Context } from '../context/context'\nimport { ValueToken } from '../tokens/value-token'\nimport { Liquid } from '../liquid'\n\nexport class Value {\n  public readonly filters: Filter[] = []\n  public readonly initial?: ValueToken\n\n  /**\n   * @param str the value to be valuated, eg.: \"foobar\" | truncate: 3\n   */\n  public constructor (str: string, private readonly filterMap: FilterMap, liquid: Liquid) {\n    const tokenizer = new Tokenizer(str)\n    this.initial = tokenizer.readValue()\n    this.filters = tokenizer.readFilters().map(({ name, args }) => new Filter(name, this.filterMap.get(name), args, liquid))\n  }\n  public * value (ctx: Context) {\n    const lenient = ctx.opts.lenientIf && this.filters.length > 0 && this.filters[0].name === 'default'\n\n    let val = yield evalToken(this.initial, ctx, lenient)\n    for (const filter of this.filters) {\n      val = yield filter.render(val, ctx)\n    }\n    return val\n  }\n}\n","import { Value } from './value'\nimport { FilterMap } from './filter/filter-map'\nimport { stringify, toValue } from '../util/underscore'\nimport { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\nimport { OutputToken } from '../tokens/output-token'\nimport { Liquid } from '../liquid'\n\nexport class Output extends TemplateImpl<OutputToken> implements Template {\n  private value: Value\n  public constructor (token: OutputToken, filters: FilterMap, liquid: Liquid) {\n    super(token)\n    this.value = new Value(token.content, filters, liquid)\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const val = yield this.value.value(ctx)\n    if (ctx.opts.keepOutputType) {\n      emitter.write(toValue(val))\n    } else {\n      emitter.write(stringify(toValue(val)))\n    }\n  }\n}\n","import { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { HTMLToken } from '../tokens/html-token'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\n\nexport class HTML extends TemplateImpl<HTMLToken> implements Template {\n  private str: string\n  public constructor (token: HTMLToken) {\n    super(token)\n    this.str = token.getContent()\n  }\n  public * render (ctx: Context, emitter: Emitter): IterableIterator<void> {\n    emitter.write(this.str)\n  }\n}\n","import { ParseError } from '../util/error'\nimport { Liquid } from '../liquid'\nimport { ParseStream } from './parse-stream'\nimport { isTagToken, isOutputToken } from '../util/type-guards'\nimport { OutputToken } from '../tokens/output-token'\nimport { Tag } from '../template/tag/tag'\nimport { Output } from '../template/output'\nimport { HTML } from '../template/html'\nimport { Template } from '../template/template'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\nexport default class Parser {\n  private liquid: Liquid\n\n  public constructor (liquid: Liquid) {\n    this.liquid = liquid\n  }\n  public parse (tokens: TopLevelToken[]) {\n    let token\n    const templates: Template[] = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  public parseToken (token: TopLevelToken, remainTokens: TopLevelToken[]) {\n    try {\n      if (isTagToken(token)) {\n        return new Tag(token, remainTokens, this.liquid)\n      }\n      if (isOutputToken(token)) {\n        return new Output(token as OutputToken, this.liquid.filters, this.liquid)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  public parseStream (tokens: TopLevelToken[]) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n}\n","import { Tokenizer, assert, TagImplOptions, TagToken, Context } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args)\n    this.key = tokenizer.readIdentifier().content\n    tokenizer.skipBlank()\n    assert(tokenizer.peek() === '=', () => `illegal token ${token.getText()}`)\n    tokenizer.advance()\n    this.value = tokenizer.remaining()\n  },\n  render: function * (ctx: Context) {\n    ctx.bottom()[this.key] = yield this.liquid._evalValue(this.value, ctx)\n  }\n} as TagImplOptions\n","import { isString, isObject, isArray } from './underscore'\n\nexport function toEnumerable (val: any) {\n  if (isArray(val)) return val\n  if (isString(val) && val.length > 0) return [val]\n  if (isObject(val)) return Object.keys(val).map((key) => [key, val[key]])\n  return []\n}\n\nexport function toArray (val: any) {\n  if (isArray(val)) return val\n  return [ val ]\n}\n","import { Drop } from './drop'\n\nexport class ForloopDrop extends Drop {\n  protected i = 0\n  public length: number\n  public constructor (length: number) {\n    super()\n    this.length = length\n  }\n  public next () {\n    this.i++\n  }\n  public index0 () {\n    return this.i\n  }\n  public index () {\n    return this.i + 1\n  }\n  public first () {\n    return this.i === 0\n  }\n  public last () {\n    return this.i === this.length - 1\n  }\n  public rindex () {\n    return this.length - this.i\n  }\n  public rindex0 () {\n    return this.length - this.i - 1\n  }\n  public valueOf () {\n    return JSON.stringify(this)\n  }\n}\n","import { assert, Tokenizer, evalToken, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { toEnumerable } from '../../util/collection'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { Hash } from '../../template/tag/hash'\n\nexport default {\n  type: 'block',\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const toknenizer = new Tokenizer(token.args)\n\n    const variable = toknenizer.readIdentifier()\n    const inStr = toknenizer.readIdentifier()\n    const collection = toknenizer.readValue()\n    assert(\n      variable.size() && inStr.content === 'in' && collection,\n      () => `illegal tag: ${token.getText()}`\n    )\n\n    this.variable = variable.content\n    this.collection = collection\n    this.hash = new Hash(toknenizer.remaining())\n    this.templates = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endfor', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n\n    if (!collection.length) {\n      yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n      return\n    }\n\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    if ('reversed' in hash) collection.reverse()\n\n    const scope = { forloop: new ForloopDrop(collection.length) }\n    ctx.push(scope)\n    for (const item of collection) {\n      scope[this.variable] = item\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      if (emitter.break) {\n        emitter.break = false\n        break\n      }\n      emitter.continue = false\n      scope.forloop.next()\n    }\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Tokenizer, assert, Template, Context, TagImplOptions, TagToken, TopLevelToken } from '../../types'\nimport { evalQuotedToken } from '../../render/expression'\nimport { Emitter } from '../../render/emitter'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args)\n    this.variable = readVariableName(tokenizer)\n    assert(this.variable, () => `${tagToken.args} not valid identifier`)\n\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', (tpl: Template) => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function * (ctx: Context) {\n    const r = this.liquid.renderer\n    const html = yield r.renderTemplates(this.templates, ctx, new Emitter(ctx.opts.keepOutputType))\n    ctx.bottom()[this.variable] = html\n  }\n} as TagImplOptions\n\nfunction readVariableName (tokenizer: Tokenizer) {\n  const word = tokenizer.readIdentifier().content\n  if (word) return word\n  const quoted = tokenizer.readQuoted()\n  if (quoted) return evalQuotedToken(quoted)\n}\n","import { Expression, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.cond = tagToken.args\n    this.cases = []\n    this.elseTemplates = []\n\n    let p: Template[] = []\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', (token: TagToken) => {\n        this.cases.push({\n          val: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const cond = yield new Expression(this.cond).value(ctx)\n    for (let i = 0; i < this.cases.length; i++) {\n      const branch = this.cases[i]\n      const val = yield new Expression(branch.val).value(ctx)\n      if (val === cond) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { TagToken } from '../../tokens/tag-token'\nimport { TopLevelToken } from '../../tokens/toplevel-token'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  }\n} as TagImplOptions\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import { assert, evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    const begin = tokenizer.p\n    const withStr = tokenizer.readIdentifier()\n    if (withStr.content === 'with') {\n      tokenizer.skipBlank()\n      if (tokenizer.peek() !== ':') {\n        this.withVar = tokenizer.readValue()\n      } else tokenizer.p = begin\n    } else tokenizer.p = begin\n\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, withVar, file } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx, new Emitter(ctx.opts.keepOutputType))\n        : yield evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const saved = ctx.saveRegister('blocks', 'blockMode')\n    ctx.setRegister('blocks', {})\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n    const scope = yield hash.render(ctx)\n    if (withVar) scope[filepath] = evalToken(withVar, ctx)\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n    ctx.push(scope)\n    yield renderer.renderTemplates(templates, ctx, emitter)\n    ctx.pop()\n    ctx.restoreRegister(saved)\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { toEnumerable } from '../../util/collection'\nimport { evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    while (!tokenizer.end()) {\n      tokenizer.skipBlank()\n      const begin = tokenizer.p\n      const keyword = tokenizer.readIdentifier()\n      if (keyword.content === 'with' || keyword.content === 'for') {\n        tokenizer.skipBlank()\n        if (tokenizer.peek() !== ':') {\n          const value = tokenizer.readValue()\n          if (value) {\n            const beforeAs = tokenizer.p\n            const asStr = tokenizer.readIdentifier()\n            let alias\n            if (asStr.content === 'as') alias = tokenizer.readIdentifier()\n            else tokenizer.p = beforeAs\n\n            this[keyword.content] = { value, alias: alias && alias.content }\n            tokenizer.skipBlank()\n            if (tokenizer.peek() === ',') tokenizer.advance()\n            continue\n          }\n        }\n      }\n      tokenizer.p = begin\n      break\n    }\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, file, hash } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx, new Emitter(ctx.opts.keepOutputType))\n        : evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const childCtx = new Context({}, ctx.opts, ctx.sync)\n    const scope = yield hash.render(ctx)\n    if (this['with']) {\n      const { value, alias } = this['with']\n      scope[alias || filepath] = evalToken(value, ctx)\n    }\n    childCtx.push(scope)\n\n    if (this['for']) {\n      const { value, alias } = this['for']\n      let collection = evalToken(value, ctx)\n      collection = toEnumerable(collection)\n      scope['forloop'] = new ForloopDrop(collection.length)\n      for (const item of collection) {\n        scope[alias] = item\n        const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n        yield renderer.renderTemplates(templates, childCtx, emitter)\n        scope.forloop.next()\n      }\n    } else {\n      const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n      yield renderer.renderTemplates(templates, childCtx, emitter)\n    }\n  }\n} as TagImplOptions\n","import { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { isNumber, stringify } from '../../util/underscore'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    emitter.write(stringify(--scope[this.variable]))\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { evalToken, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken) {\n    const tokenizer = new Tokenizer(tagToken.args)\n    const group = tokenizer.readValue()\n    tokenizer.skipBlank()\n\n    this.candidates = []\n\n    if (group) {\n      if (tokenizer.peek() === ':') {\n        this.group = group\n        tokenizer.advance()\n      } else this.candidates.push(group)\n    }\n\n    while (!tokenizer.end()) {\n      const value = tokenizer.readValue()\n      if (value) this.candidates.push(value)\n      tokenizer.readTo(',')\n    }\n    assert(this.candidates.length, () => `empty candidates: ${tagToken.getText()}`)\n  },\n\n  render: function (ctx: Context, emitter: Emitter) {\n    const group = evalToken(this.group, ctx)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n    const groups = ctx.getRegister('cycle')\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n    const html = evalToken(candidate, ctx)\n    emitter.write(html)\n  }\n} as TagImplOptions\n","import { Emitter, isTruthy, Expression, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        cond: tagToken.args,\n        templates: (p = [])\n      }))\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endif', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n\n    for (const branch of this.branches) {\n      const cond = yield new Expression(branch.cond, ctx.opts.lenientIf).value(ctx)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { isNumber, stringify } from '../../util/underscore'\nimport { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    const val = scope[this.variable]\n    scope[this.variable]++\n    emitter.write(stringify(val))\n  }\n} as TagImplOptions\n","import { assert, evalQuotedToken, TypeGuards, evalToken, Tokenizer, Emitter, Hash, TagToken, TopLevelToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(token.args)\n    const file = this.liquid.options.dynamicPartials ? tokenizer.readValue() : tokenizer.readFileName()\n    assert(file, () => `illegal argument \"${token.args}\"`)\n\n    this.file = file\n    this.hash = new Hash(tokenizer.remaining())\n    this.tpls = this.liquid.parser.parse(remainTokens)\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, file } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx, new Emitter(ctx.opts.keepOutputType))\n        : evalToken(this.file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    // render the remaining tokens immediately\n    ctx.setRegister('blockMode', BlockMode.STORE)\n    const blocks = ctx.getRegister('blocks')\n    const html = yield renderer.renderTemplates(this.tpls, ctx, new Emitter(ctx.opts.keepOutputType))\n    if (blocks[''] === undefined) blocks[''] = html\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n    ctx.push(yield hash.render(ctx))\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n    const partial = yield renderer.renderTemplates(templates, ctx, new Emitter(ctx.opts.keepOutputType))\n    ctx.pop()\n    emitter.write(partial)\n  }\n} as TagImplOptions\n","import BlockMode from '../../context/block-mode'\nimport { ParseStream, TagToken, TopLevelToken, Template, Context, TagImplOptions, Emitter } from '../../types'\n\nexport default {\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n    this.tpls = [] as Template[]\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', () => stream.stop())\n      .on('template', (tpl: Template) => this.tpls.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const blocks = ctx.getRegister('blocks')\n    const childDefined = blocks[this.block]\n    const r = this.liquid.renderer\n    const html = childDefined !== undefined\n      ? childDefined\n      : yield r.renderTemplates(this.tpls, ctx, new Emitter(ctx.opts.keepOutputType))\n\n    if (ctx.getRegister('blockMode', BlockMode.OUTPUT) === BlockMode.STORE) {\n      blocks[this.block] = html\n      return\n    }\n    emitter.write(html)\n  }\n} as TagImplOptions\n","import { TagToken, TopLevelToken, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map((token: TopLevelToken) => token.getText()).join('')\n  }\n} as TagImplOptions\n","import { ForloopDrop } from './forloop-drop'\n\nexport class TablerowloopDrop extends ForloopDrop {\n  private cols: number\n  public constructor (length: number, cols: number) {\n    super(length)\n    this.length = length\n    this.cols = cols\n  }\n  public row () {\n    return Math.floor(this.i / this.cols) + 1\n  }\n  public col0 () {\n    return (this.i % this.cols)\n  }\n  public col () {\n    return this.col0() + 1\n  }\n  public col_first () {  // eslint-disable-line\n    return this.col0() === 0\n  }\n  public col_last () { // eslint-disable-line\n    return this.col() === this.cols\n  }\n}\n","import { toEnumerable } from '../../util/collection'\nimport { assert, evalToken, Emitter, Hash, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { TablerowloopDrop } from '../../drop/tablerowloop-drop'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args)\n\n    this.variable = tokenizer.readIdentifier()\n    tokenizer.skipBlank()\n\n    const tmp = tokenizer.readIdentifier()\n    assert(tmp && tmp.content === 'in', () => `illegal tag: ${tagToken.getText()}`)\n\n    this.collection = tokenizer.readValue()\n    this.hash = new Hash(tokenizer.remaining())\n    this.templates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n\n    const r = this.liquid.renderer\n    const tablerowloop = new TablerowloopDrop(collection.length, cols)\n    const scope = { tablerowloop }\n    ctx.push(scope)\n\n    for (let idx = 0; idx < collection.length; idx++, tablerowloop.next()) {\n      scope[this.variable.content] = collection[idx]\n      if (tablerowloop.col0() === 0) {\n        if (tablerowloop.row() !== 1) emitter.write('</tr>')\n        emitter.write(`<tr class=\"row${tablerowloop.row()}\">`)\n      }\n      emitter.write(`<td class=\"col${tablerowloop.col()}\">`)\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      emitter.write('</td>')\n    }\n    if (collection.length) emitter.write('</tr>')\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { TopLevelToken, Template, Emitter, Expression, isTruthy, isFalsy, ParseStream, Context, TagImplOptions, TagToken } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.templates = []\n    this.branches = []\n    this.elseTemplates = []\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => {\n        p = this.templates\n        this.cond = tagToken.args\n      })\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const cond = yield new Expression(this.cond, ctx.opts.lenientIf).value(ctx)\n\n    if (isFalsy(cond, ctx)) {\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      return\n    }\n\n    for (const branch of this.branches) {\n      const cond = yield new Expression(branch.cond, ctx.opts.lenientIf).value(ctx)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.break = true\n  }\n}\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.continue = true\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport render from './render'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nconst tags: { [key: string]: TagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, render, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","import { stringify } from '../../util/underscore'\n\nconst escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nexport function escape (str: string) {\n  return stringify(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str: string) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport function escapeOnce (str: string) {\n  return escape(unescape(str))\n}\n\nexport function newlineToBr (v: string) {\n  return v.replace(/\\n/g, '<br/>')\n}\n\nexport function stripHtml (v: string) {\n  return v.replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","import { caseInsensitiveCompare } from '../../util/underscore'\n\nexport const abs = Math.abs\nexport const atLeast = Math.max\nexport const atMost = Math.min\nexport const ceil = Math.ceil\nexport const dividedBy = (v: number, arg: number) => v / arg\nexport const floor = Math.floor\nexport const minus = (v: number, arg: number) => v - arg\nexport const modulo = (v: number, arg: number) => v % arg\nexport const times = (v: number, arg: number) => v * arg\n\nexport function round (v: number, arg = 0) {\n  const amp = Math.pow(10, arg)\n  return Math.round(v * amp) / amp\n}\n\nexport function plus (v: number, arg: number) {\n  return Number(v) + Number(arg)\n}\n\nexport function sortNatural (input: any[], property?: string) {\n  if (!input || !input.sort) return []\n  if (property !== undefined) {\n    return [...input].sort(\n      (lhs, rhs) => caseInsensitiveCompare(lhs[property], rhs[property])\n    )\n  }\n  return [...input].sort(caseInsensitiveCompare)\n}\n","export const urlDecode = (x: string) => x.split('+').map(decodeURIComponent).join(' ')\nexport const urlEncode = (x: string) => x.split(' ').map(encodeURIComponent).join('+')\n","import { isArray, last as arrayLast } from '../../util/underscore'\nimport { toArray } from '../../util/collection'\nimport { isTruthy } from '../../render/boolean'\nimport { FilterImpl } from '../../template/filter/filter-impl'\nimport { Scope } from '../../context/scope'\n\nexport const join = (v: any[], arg: string) => v.join(arg === undefined ? ' ' : arg)\nexport const last = (v: any) => isArray(v) ? arrayLast(v) : ''\nexport const first = (v: any) => isArray(v) ? v[0] : ''\nexport const reverse = (v: any[]) => [...v].reverse()\n\nexport function sort<T> (this: FilterImpl, arr: T[], property?: string) {\n  const getValue = (obj: Scope) => property ? this.context.getFromScope(obj, property.split('.')) : obj\n  return toArray(arr).sort((lhs, rhs) => {\n    lhs = getValue(lhs)\n    rhs = getValue(rhs)\n    return lhs < rhs ? -1 : (lhs > rhs ? 1 : 0)\n  })\n}\n\nexport const size = (v: string | any[]) => (v && v.length) || 0\n\nexport function map<T1, T2> (this: FilterImpl, arr: Scope[], property: string) {\n  return toArray(arr).map(obj => this.context.getFromScope(obj, property.split('.')))\n}\n\nexport function concat<T1, T2> (v: T1[], arg: T2[] | T2): (T1 | T2)[] {\n  return toArray(v).concat(arg)\n}\n\nexport function slice<T> (v: T[], begin: number, length = 1): T[] {\n  begin = begin < 0 ? v.length + begin : begin\n  return v.slice(begin, begin + length)\n}\n\nexport function where<T extends object> (this: FilterImpl, arr: T[], property: string, expected?: any): T[] {\n  return toArray(arr).filter(obj => {\n    const value = this.context.getFromScope(obj, String(property).split('.'))\n    return expected === undefined ? isTruthy(value, this.context) : value === expected\n  })\n}\n\nexport function uniq<T> (arr: T[]): T[] {\n  const u = {}\n  return (arr || []).filter(val => {\n    if (u.hasOwnProperty(String(val))) return false\n    u[String(val)] = true\n    return true\n  })\n}\n","import { changeCase, padStart, padEnd } from './underscore'\n\nconst rFormat = /%([-_0^#:]+)?(\\d+)?([EO])?(.)/\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\ninterface FormatOptions {\n  flags: object;\n  width?: string;\n  modifier?: string;\n}\n\nfunction abbr (str: string) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nfunction daysInMonth (d: Date) {\n  const feb = isLeapYear(d) ? 29 : 28\n  return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n}\nfunction getDayOfYear (d: Date) {\n  let num = 0\n  for (let i = 0; i < d.getMonth(); ++i) {\n    num += daysInMonth(d)[i]\n  }\n  return num + d.getDate()\n}\nfunction getWeekOfYear (d: Date, startDay: number) {\n  // Skip to startDay of this week\n  const now = getDayOfYear(d) + (startDay - d.getDay())\n  // Find the first startDay of the year\n  const jan1 = new Date(d.getFullYear(), 0, 1)\n  const then = (7 - jan1.getDay() + startDay)\n  return String(Math.floor((now - then) / 7) + 1)\n}\nfunction isLeapYear (d: Date) {\n  const year = d.getFullYear()\n  return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n}\nfunction getSuffix (d: Date) {\n  const str = d.getDate().toString()\n  const index = parseInt(str.slice(-1))\n  return suffixes[index] || suffixes['default']\n}\nfunction century (d: Date) {\n  return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n}\n\n// default to 0\nconst padWidths = {\n  d: 2,\n  e: 2,\n  H: 2,\n  I: 2,\n  j: 3,\n  k: 2,\n  l: 2,\n  L: 3,\n  m: 2,\n  M: 2,\n  S: 2,\n  U: 2,\n  W: 2\n}\n\n// default to '0'\nconst padChars = {\n  a: ' ',\n  A: ' ',\n  b: ' ',\n  B: ' ',\n  c: ' ',\n  e: ' ',\n  k: ' ',\n  l: ' ',\n  p: ' ',\n  P: ' '\n}\nconst formatCodes = {\n  a: (d: Date) => dayNamesShort[d.getDay()],\n  A: (d: Date) => dayNames[d.getDay()],\n  b: (d: Date) => monthNamesShort[d.getMonth()],\n  B: (d: Date) => monthNames[d.getMonth()],\n  c: (d: Date) => d.toLocaleString(),\n  C: (d: Date) => century(d),\n  d: (d: Date) => d.getDate(),\n  e: (d: Date) => d.getDate(),\n  H: (d: Date) => d.getHours(),\n  I: (d: Date) => String(d.getHours() % 12 || 12),\n  j: (d: Date) => getDayOfYear(d),\n  k: (d: Date) => d.getHours(),\n  l: (d: Date) => String(d.getHours() % 12 || 12),\n  L: (d: Date) => d.getMilliseconds(),\n  m: (d: Date) => d.getMonth() + 1,\n  M: (d: Date) => d.getMinutes(),\n  N: (d: Date, opts: FormatOptions) => {\n    const width = Number(opts.width) || 9\n    const str = String(d.getMilliseconds()).substr(0, width)\n    return padEnd(str, width, '0')\n  },\n  p: (d: Date) => (d.getHours() < 12 ? 'AM' : 'PM'),\n  P: (d: Date) => (d.getHours() < 12 ? 'am' : 'pm'),\n  q: (d: Date) => getSuffix(d),\n  s: (d: Date) => Math.round(d.valueOf() / 1000),\n  S: (d: Date) => d.getSeconds(),\n  u: (d: Date) => d.getDay() || 7,\n  U: (d: Date) => getWeekOfYear(d, 0),\n  w: (d: Date) => d.getDay(),\n  W: (d: Date) => getWeekOfYear(d, 1),\n  x: (d: Date) => d.toLocaleDateString(),\n  X: (d: Date) => d.toLocaleTimeString(),\n  y: (d: Date) => d.getFullYear().toString().substring(2, 4),\n  Y: (d: Date) => d.getFullYear(),\n  z: (d: Date, opts: FormatOptions) => {\n    const offset = d.getTimezoneOffset()\n    const nOffset = Math.abs(offset)\n    const h = Math.floor(nOffset / 60)\n    const m = nOffset % 60\n    return (offset > 0 ? '-' : '+') +\n      padStart(h, 2, '0') +\n      (opts.flags[':'] ? ':' : '') +\n      padStart(m, 2, '0')\n  },\n  't': () => '\\t',\n  'n': () => '\\n',\n  '%': () => '%'\n};\n(formatCodes as any).h = formatCodes.b\n\nexport default function (d: Date, formatStr: string) {\n  let output = ''\n  let remaining = formatStr\n  let match\n  while ((match = rFormat.exec(remaining))) {\n    output += remaining.slice(0, match.index)\n    remaining = remaining.slice(match.index + match[0].length)\n    output += format(d, match)\n  }\n  return output + remaining\n}\n\nfunction format (d: Date, match: RegExpExecArray) {\n  const [input, flagStr = '', width, modifier, conversion] = match\n  const convert = formatCodes[conversion]\n  if (!convert) return input\n  const flags = {}\n  for (const flag of flagStr) flags[flag] = true\n  let ret = String(convert(d, { flags, width, modifier }))\n  let padChar = padChars[conversion] || '0'\n  let padWidth = width || padWidths[conversion] || 0\n  if (flags['^']) ret = ret.toUpperCase()\n  else if (flags['#']) ret = changeCase(ret)\n  if (flags['_']) padChar = ' '\n  else if (flags['0']) padChar = '0'\n  if (flags['-']) padWidth = 0\n  return padStart(ret, padWidth, padChar)\n}\n","import strftime from '../../util/strftime'\nimport { isString, isNumber } from '../../util/underscore'\n\nexport function date (v: string | Date, arg: string) {\n  let date = v\n  if (v === 'now' || v === 'today') {\n    date = new Date()\n  } else if (isNumber(v)) {\n    date = new Date(v * 1000)\n  } else if (isString(v)) {\n    date = /^\\d+$/.test(v) ? new Date(+v * 1000) : new Date(v)\n  }\n  return isValidDate(date) ? strftime(date, arg) : v\n}\n\nfunction isValidDate (date: any): date is Date {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isFalsy } from '../../render/boolean'\nimport { isArray, isString, toValue } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function Default<T1, T2> (this: FilterImpl, v: string | T1, arg: T2): string | T1 | T2 {\n  if (isArray(v) || isString(v)) return v.length ? v : arg\n  return isFalsy(toValue(v), this.context) ? arg : v\n}\nexport function json (v: any) {\n  return JSON.stringify(v)\n}\n","/**\n * String related filters\n *\n * * prefer stringify() to String() since `undefined`, `null` should eval ''\n */\nimport { stringify } from '../../util/underscore'\nimport { assert } from '../../util/assert'\n\nexport function append (v: string, arg: string) {\n  assert(arg !== undefined, () => 'append expect 2 arguments')\n  return stringify(v) + stringify(arg)\n}\n\nexport function prepend (v: string, arg: string) {\n  assert(arg !== undefined, () => 'prepend expect 2 arguments')\n  return stringify(arg) + stringify(v)\n}\n\nexport function lstrip (v: string) {\n  return stringify(v).replace(/^\\s+/, '')\n}\n\nexport function downcase (v: string) {\n  return stringify(v).toLowerCase()\n}\n\nexport function upcase (str: string) {\n  return stringify(str).toUpperCase()\n}\n\nexport function remove (v: string, arg: string) {\n  return stringify(v).split(String(arg)).join('')\n}\n\nexport function removeFirst (v: string, l: string) {\n  return stringify(v).replace(String(l), '')\n}\n\nexport function rstrip (str: string) {\n  return stringify(str).replace(/\\s+$/, '')\n}\n\nexport function split (v: string, arg: string) {\n  return stringify(v).split(String(arg))\n}\n\nexport function strip (v: string) {\n  return stringify(v).trim()\n}\n\nexport function stripNewlines (v: string) {\n  return stringify(v).replace(/\\n/g, '')\n}\n\nexport function capitalize (str: string) {\n  str = stringify(str)\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function replace (v: string, pattern: string, replacement: string) {\n  return stringify(v).split(String(pattern)).join(replacement)\n}\n\nexport function replaceFirst (v: string, arg1: string, arg2: string) {\n  return stringify(v).replace(String(arg1), arg2)\n}\n\nexport function truncate (v: string, l = 50, o = '...') {\n  v = stringify(v)\n  if (v.length <= l) return v\n  return v.substr(0, l - o.length) + o\n}\n\nexport function truncatewords (v: string, l = 15, o = '...') {\n  const arr = v.split(/\\s+/)\n  let ret = arr.slice(0, l).join(' ')\n  if (arr.length >= l) ret += o\n  return ret\n}\n","import { TagImplOptions } from './tag-impl-options'\nimport { assert } from '../../util/assert'\n\nexport class TagMap {\n  private impls: {[key: string]: TagImplOptions} = {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl, () => `tag \"${name}\" not found`)\n    return impl\n  }\n\n  set (name: string, impl: TagImplOptions) {\n    this.impls[name] = impl\n  }\n}\n","import { FilterImplOptions } from './filter-impl-options'\nimport { Filter } from './filter'\nimport { FilterArg } from '../../parser/filter-arg'\nimport { assert } from '../../util/assert'\nimport { Liquid } from '../../liquid'\n\nexport class FilterMap {\n  private impls: {[key: string]: FilterImplOptions} = {}\n\n  constructor (\n    private readonly strictFilters: boolean,\n    private readonly liquid: Liquid\n  ) {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl || !this.strictFilters, () => `undefined filter: ${name}`)\n    return impl\n  }\n\n  set (name: string, impl: FilterImplOptions) {\n    this.impls[name] = impl\n  }\n\n  create (name: string, args: FilterArg[]) {\n    return new Filter(name, this.get(name), args, this.liquid)\n  }\n}\n","import { Context } from './context/context'\nimport * as fs from './fs/node'\nimport { forOwn, snakeCase } from './util/underscore'\nimport { Template } from './template/template'\nimport { Tokenizer } from './parser/tokenizer'\nimport { Render } from './render/render'\nimport Parser from './parser/parser'\nimport { TagImplOptions } from './template/tag/tag-impl-options'\nimport { Value } from './template/value'\nimport builtinTags from './builtin/tags'\nimport * as builtinFilters from './builtin/filters'\nimport { TagMap } from './template/tag/tag-map'\nimport { FilterMap } from './template/filter/filter-map'\nimport { LiquidOptions, normalizeStringArray, NormalizedFullOptions, applyDefault, normalize } from './liquid-options'\nimport { FilterImplOptions } from './template/filter/filter-impl-options'\nimport { FS } from './fs/fs'\nimport { toPromise, toValue } from './util/async'\nimport { Emitter } from './render/emitter'\n\nexport * from './types'\n\nexport class Liquid {\n  public options: NormalizedFullOptions\n  public renderer: Render\n  public parser: Parser\n  public filters: FilterMap\n  public tags: TagMap\n  private fs: FS\n\n  public constructor (opts: LiquidOptions = {}) {\n    this.options = applyDefault(normalize(opts))\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.fs = opts.fs || fs\n    this.filters = new FilterMap(this.options.strictFilters, this)\n    this.tags = new TagMap()\n\n    forOwn(builtinTags, (conf: TagImplOptions, name: string) => this.registerTag(snakeCase(name), conf))\n    forOwn(builtinFilters, (handler: FilterImplOptions, name: string) => this.registerFilter(snakeCase(name), handler))\n  }\n  public parse (html: string, filepath?: string): Template[] {\n    const tokenizer = new Tokenizer(html, filepath)\n    const tokens = tokenizer.readTopLevelTokens(this.options)\n    return this.parser.parse(tokens)\n  }\n\n  public _render (tpl: Template[], scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const options = { ...this.options, ...normalize(opts) }\n    const ctx = new Context(scope, options, sync)\n    const emitter = new Emitter(options.keepOutputType)\n    return this.renderer.renderTemplates(tpl, ctx, emitter)\n  }\n  public async render (tpl: Template[], scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._render(tpl, scope, opts, false))\n  }\n  public renderSync (tpl: Template[], scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._render(tpl, scope, opts, true))\n  }\n\n  public _parseAndRender (html: string, scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const tpl = this.parse(html)\n    return this._render(tpl, scope, opts, sync)\n  }\n  public async parseAndRender (html: string, scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._parseAndRender(html, scope, opts, false))\n  }\n  public parseAndRenderSync (html: string, scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._parseAndRender(html, scope, opts, true))\n  }\n\n  public * _parseFile (file: string, opts?: LiquidOptions, sync?: boolean) {\n    const options = { ...this.options, ...normalize(opts) }\n    const paths = options.root.map(root => this.fs.resolve(root, file, options.extname))\n    if (this.fs.fallback !== undefined) {\n      const filepath = this.fs.fallback(file)\n      if (filepath !== undefined) paths.push(filepath)\n    }\n\n    for (const filepath of paths) {\n      const { cache } = options\n      if (cache) {\n        const tpls = yield cache.read(filepath)\n        if (tpls) return tpls\n      }\n      if (!(sync ? this.fs.existsSync(filepath) : yield this.fs.exists(filepath))) continue\n      const tpl = this.parse(sync ? this.fs.readFileSync(filepath) : yield this.fs.readFile(filepath), filepath)\n      if (cache) cache.write(filepath, tpl)\n      return tpl\n    }\n    throw this.lookupError(file, options.root)\n  }\n  public async parseFile (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return toPromise(this._parseFile(file, opts, false))\n  }\n  public parseFileSync (file: string, opts?: LiquidOptions): Template[] {\n    return toValue(this._parseFile(file, opts, true))\n  }\n  public async renderFile (file: string, ctx?: object, opts?: LiquidOptions) {\n    const templates = await this.parseFile(file, opts)\n    return this.render(templates, ctx, opts)\n  }\n  public renderFileSync (file: string, ctx?: object, opts?: LiquidOptions) {\n    const options = normalize(opts)\n    const templates = this.parseFileSync(file, options)\n    return this.renderSync(templates, ctx, opts)\n  }\n\n  public _evalValue (str: string, ctx: Context): IterableIterator<any> {\n    const value = new Value(str, this.filters, this)\n    return value.value(ctx)\n  }\n  public async evalValue (str: string, ctx: Context): Promise<any> {\n    return toPromise(this._evalValue(str, ctx))\n  }\n  public evalValueSync (str: string, ctx: Context): any {\n    return toValue(this._evalValue(str, ctx))\n  }\n\n  public registerFilter (name: string, filter: FilterImplOptions) {\n    this.filters.set(name, filter)\n  }\n  public registerTag (name: string, tag: TagImplOptions) {\n    this.tags.set(name, tag)\n  }\n  public plugin (plugin: (this: Liquid, L: typeof Liquid) => void) {\n    return plugin.call(this, Liquid)\n  }\n  public express () {\n    const self = this // eslint-disable-line\n    return function (this: any, filePath: string, ctx: object, callback: (err: Error | null, rendered: string) => void) {\n      const opts = { root: [...normalizeStringArray(this.root), ...self.options.root] }\n      self.renderFile(filePath, ctx, opts).then(html => callback(null, html) as any, callback as any)\n    }\n  }\n\n  private lookupError (file: string, roots: string[]) {\n    const err = new Error('ENOENT') as any\n    err.message = `ENOENT: Failed to lookup \"${file}\" in \"${roots}\"`\n    err.code = 'ENOENT'\n    return err\n  }\n\n  /**\n   * @deprecated use parseFile instead\n   */\n  public async getTemplate (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return this.parseFile(file, opts)\n  }\n  /**\n   * @deprecated use parseFileSync instead\n   */\n  public getTemplateSync (file: string, opts?: LiquidOptions): Template[] {\n    return this.parseFileSync(file, opts)\n  }\n}\n"],"names":["tslib_1.__spread","_.isArray","_.isString","tslib_1.__extends","_\r\n        .range","_.padStart","tslib_1.__values","TypeGuards.isOperatorToken","TypeGuards.isPropertyAccessToken","TypeGuards.isRangeToken","TypeGuards.isLiteralToken","TypeGuards.isNumberToken","TypeGuards.isWordToken","TypeGuards.isQuotedToken","toValue","BlockMode","last","arrayLast","builtinTags"],"mappings":"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"}