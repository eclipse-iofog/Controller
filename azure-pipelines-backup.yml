trigger:
  - master
  - develop
  - feature/*

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: rushbuild.azurecr.io/rushcontroller:latest #$(Build.SourceVersion)
  azureSubscriptionEndpoint: azure
  azureContainerRegistry: rushbuild

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
      npm run build
    displayName: 'npm install and build'

  - script: |
      echo "Int tests"
    displayName: 'npm test'

  - script: |
      npm test
    displayName: 'npm int test'

  - task: Docker@1
    displayName: Build docker image
    inputs:
      command: 'Build an image'
      dockerFile: Dockerfile
      imageName: $(imageName)
      containerregistrytype: Azure Container Registry
      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
      azureContainerRegistry: $(azureContainerRegistry)

  - script: |
      docker login -u rushbuild -p $DOCKER_SECRET rushbuild.azurecr.io
      docker push $(imageName)
    env:
      DOCKER_SECRET: $(dockerPassword)

  - task: Kubernetes@1
    displayName: 'create ns'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'azure'
      azureResourceGroup: 'rush-sonar'
      kubernetesCluster: 'rush-build'
      useClusterAdmin: true
      command: 'create'
      arguments: 'ns $(Build.BuildId)'

  - task: Kubernetes@1
    displayName: 'deploy app'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'azure'
      azureResourceGroup: 'rush-sonar'
      kubernetesCluster: 'rush-build'
      useClusterAdmin: true
      command: 'create'
      arguments: 'deployment rushcontroller --image=$(imageName) -n $(Build.BuildId)'

  - script: |
      echo "e2e tests"
    displayName: 'e2e tests'

  - task: Kubernetes@1
    displayName: 'delete ns'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'azure'
      azureResourceGroup: 'rush-sonar'
      kubernetesCluster: 'rush-build'
      useClusterAdmin: true
      command: 'delete'
      arguments: 'ns $(Build.BuildId)'

#  - task: Docker@1
#    displayName: Push Docker image
#    inputs:
#      command: 'Push an image'
#      containerregistrytype: Azure Container Registry
#      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
#      azureContainerRegistry: $(azureContainerRegistry)
#      imageName: $(imageName)

#  - task: Docker@1
#    displayName: "Container registry login"
#    inputs:
#      command: login
#      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
#      azureContainerRegistry: $(azureContainerRegistry)
#
#  - script: |
#      docker build -t $(dockerId).azurecr.io/$(imageName):$COMMIT_ID .
#      docker push $(dockerId).azurecr.io/$(imageName):$COMMIT_ID
#    displayName: 'docker'
#    env:
#      COMMIT_ID: $(Build.SourceVersion)