sudo: true
language: node_js
node_js: "9"
notifications:
  email: false
  slack:
    rooms:
      - secure: amP0nLt6NoTtatbxzq1DXpkyVWCmwasGVrzwtyeTEkz/A4H8rA6nAOHdBIIiIVBySaTBVpR2uar9MFWTVy7kWuzRDnBLlkjuXia0Paykv9ENf8CysW0bddhRZNz0zp3SKjjCUCPXe5bmEszQjGKCBOj2XJrkpdnYQdk0L+AqNMGcI2xhu8/RSlww6Ld7OsnkvDyVvOnriclXinZu3V3f6mY7GuXcRva/qowIE8RMGmH70DPBOkCbo7D8g6WtGXcT7sgJVsTOiqPknmQRHJcHi9d55J1fr2cRNRxOCi3pz6B8jwx9BLxKbSttEAO9r9634/Yx6GByE8JaidgVkIm6OTvi6fkCHZZWJGgyxRke/EOOjhdMHSuhVQtBX6RQ4ADRs4Ja4+g9EplXsPaxY4KI7E5jV0HuBn5M7m8RrZ2npP36kqc5/T87tDrocQVKTw5TxYiHUh2GHVw90eA5XFS5eYxT/Ts39n+Jk0CznBQsV47xcUi78OdajP8dAHu/6uC8+xTuN3A00KodH+8H0rQIq6GemMF9FbqRZDjb5ouGu5sI2aiTamKomn1XkBQkDkkrRXLbFg1xfG2XwQHuT7+rBrLqc9QSS+55hz3YDoHvs2EGoYjHLbs/5N25V24LbFJfbg1dF5PxVQ4L58NR5A23zNduElWgzsME8UDtgT9/lac=
    on_success: always
    on_failure: always
    template:
      - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch} in PR <%{pull_request_url}|#%{pull_request_number}> by %{author} %{result} in %{duration}"
stages:
- name: build
  if: type = pull_request
- name: dev_deploy
  if: branch = develop AND type = push
- name: pre_release
  if: branch =~ /^release-.*$/ AND type = push
- name: release
  if: branch = master and type = push

jobs:
  include:
  - stage: build
    script:
    - npm test
    - npm run postman_test
  - stage: dev_deploy
    before_install:
    - sudo apt-get install sshpass
    script: 
    - sshpass -p $DEV_MACHINE_PASSWORD ssh -o StrictHostKeyChecking=no $DEV_MACHINE_USERNAME@$DEV_MACHINE_IP
      "cd /FogController; NODE_ENV=production node src/main.js stop; git pull; npm
      i; npm test; npm run postman_test; NODE_ENV=production node src/main.js start;"
  - stage: pre_release
    before_install:
    - sudo apt-get install sshpass
    script: 
    - sshpass -p $PREPROD_MACHINE_PASSWORD ssh -o StrictHostKeyChecking=no $PREPROD_MACHINE_USERNAME@$PREPROD_MACHINE_IP
      "cd /Controller; NODE_ENV=production node src/main.js stop; git checkout $TRAVIS_BRANCH; npm i;
      npm test; npm run postman_test; NODE_ENV=production node src/main.js start;"
  - stage: release
    #before_install:
      #- git clone "https://github.com/$TRAVIS_REPO_SLUG.git" "$TRAVIS_REPO_SLUG";
      #- cd "$TRAVIS_REPO_SLUG";
      #- git checkout -qf "$TRAVIS_COMMIT";
      #- git checkout master
    #before_deploy:
      #- git config --global user.name "${GH_USERNAME}";
      #- git config credential.helper "store --file=.git/credentials";
      #- echo "https://${GH_TOKEN}:@github.com" > .git/credentials;
      #- npm run automatic-release
    deploy:
      skip_cleanup: true
      provider: npm
      email: "${NPM_EMAIL_ADDRESS}"
      api_key: "${NPM_AUTH_TOKEN}"
      on:
        tags: false
    after_deploy:
    - sshpass -p $PROD_MACHINE_PASSWORD ssh -o StrictHostKeyChecking=no $PROD_MACHINE_USERNAME@$PROD_MACHINE_IP
      "iofog-controller stop; npm update -g iofogcontroller; iofog-controller start"
