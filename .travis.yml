sudo: true
language: node_js
node_js: "9"
notifications:
  email: false
  slack:
    rooms:
      - secure: amP0nLt6NoTtatbxzq1DXpkyVWCmwasGVrzwtyeTEkz/A4H8rA6nAOHdBIIiIVBySaTBVpR2uar9MFWTVy7kWuzRDnBLlkjuXia0Paykv9ENf8CysW0bddhRZNz0zp3SKjjCUCPXe5bmEszQjGKCBOj2XJrkpdnYQdk0L+AqNMGcI2xhu8/RSlww6Ld7OsnkvDyVvOnriclXinZu3V3f6mY7GuXcRva/qowIE8RMGmH70DPBOkCbo7D8g6WtGXcT7sgJVsTOiqPknmQRHJcHi9d55J1fr2cRNRxOCi3pz6B8jwx9BLxKbSttEAO9r9634/Yx6GByE8JaidgVkIm6OTvi6fkCHZZWJGgyxRke/EOOjhdMHSuhVQtBX6RQ4ADRs4Ja4+g9EplXsPaxY4KI7E5jV0HuBn5M7m8RrZ2npP36kqc5/T87tDrocQVKTw5TxYiHUh2GHVw90eA5XFS5eYxT/Ts39n+Jk0CznBQsV47xcUi78OdajP8dAHu/6uC8+xTuN3A00KodH+8H0rQIq6GemMF9FbqRZDjb5ouGu5sI2aiTamKomn1XkBQkDkkrRXLbFg1xfG2XwQHuT7+rBrLqc9QSS+55hz3YDoHvs2EGoYjHLbs/5N25V24LbFJfbg1dF5PxVQ4L58NR5A23zNduElWgzsME8UDtgT9/lac=
    on_success: always
    on_failure: always
    template:
      - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch} in PR <%{pull_request_url}|#%{pull_request_number}> by %{author} %{result} in %{duration}"
stages:
- name: dev_deploy
  if: branch = develop AND type = push
- name: pre_release_deploy
  if: branch =~ /^release-.*$/ AND type = push
- name: release_deploy
  if: branch = master and type = push

jobs:
  include:
  - script: 
    - npm test
  - script: 
    - npm run postman_test
  - stage: dev_deploy
    before_install:
    - sudo apt-get install sshpass
    before_deploy:
    - npm pack
    - export VERSION=`npm view iofogcontroller version`
    deploy:
      skip_cleanup: true
      provider: script
      script: 
      - sshpass -p $DEV_MACHINE_PASSWORD scp -o StrictHostKeyChecking=no iofogcontroller-${VERSION}.tgz 
        $DEV_MACHINE_USERNAME@$DEV_MACHINE_IP:/iofogcontroller
    after_deploy:
    - sshpass -p $DEV_MACHINE_PASSWORD ssh -o StrictHostKeyChecking=no $DEV_MACHINE_USERNAME@$DEV_MACHINE_IP
      "iofog-controller stop; npm install /iofogcontroller/iofogcontroller-${VERSION}.tgz; iofog-controller start;"
  - stage: pre_release_deploy
    before_install:
    - sudo apt-get install sshpass
    before_deploy:
    - npm version --no-git-tag-version prerelease -preid=prerelease -m "upgrade to %s for prerelease package"
    deploy:
      skip_cleanup: true
      provider: npm
      email: "${NPM_EMAIL_ADDRESS}"
      api_key: "${NPM_AUTH_TOKEN}"
      tag: dev
    after_deploy:
    - sshpass -p $PREPROD_MACHINE_PASSWORD ssh -o StrictHostKeyChecking=no $PREPROD_MACHINE_USERNAME@$PREPROD_MACHINE_IP
      "iofog-controller stop; npm update -g iofogcontroller@dev; npm test; npm run postman_test; iofog-controller start;"
  - stage: release_deploy
    before_install:
    - sudo apt-get install sshpass
    before_deploy:
    - npm version patch -m "upgrade to %s for release"
    deploy:
      skip_cleanup: true
      provider: npm
      email: "${NPM_EMAIL_ADDRESS}"
      api_key: "${NPM_AUTH_TOKEN}"
      tag: latest
    after_deploy:
    - sshpass -p $PROD_MACHINE_PASSWORD ssh -o StrictHostKeyChecking=no $PROD_MACHINE_USERNAME@$PROD_MACHINE_IP
      "iofog-controller stop; npm update -g iofogcontroller; iofog-controller start"
